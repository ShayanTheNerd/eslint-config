name: RELEASE

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'The type of version-bump (patch, minor, or major)'
        required: true
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  release:
    name: Release a New Version
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write

    steps:
      - name: Prepare the Environment
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: node
          registry-url: 'https://registry.npmjs.org'

      - name: Install Bun
        uses: oven-sh/setup-bun@v2

      - name: Install the Dependencies
        run: bun install --frozen-lockfile

      - name: Configure Git
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"

      - name: Bump the Version & Create a New Tag
        id: version
        run: |
          new_version=$(npm version ${{ github.event.inputs.version }} --no-git-tag-version)
          git commit -am "chore: release $new_version"
          git tag -am "Release $new_version" $new_version
          git push --follow-tags
          echo "tag=$new_version" >> $GITHUB_OUTPUT

      - name: Publish to NPM
        run: npm publish
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Generate a Changelog Based on Conventional Commits
        id: changelog
        uses: requarks/changelog-action@v1.10.2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.version.outputs.tag }}
          writeToFile: false
          useGitmojis: false
          restrictToTypes: feat,perf,fix,docs,refactor

      - name: Create a Draft GitHub Release
        uses: ncipollo/release-action@v1.18.0
        with:
          draft: true
          makeLatest: true
          allowUpdates: true
          generateReleaseNotes: true
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.version.outputs.tag }}
          body: ${{ steps.changelog.outputs.changes }}
